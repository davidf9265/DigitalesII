--lpm_mux CASCADE_CHAIN="MANUAL" DEVICE_FAMILY="FLEX10K" IGNORE_CASCADE_BUFFERS="OFF" LPM_SIZE=2 LPM_WIDTH=16 LPM_WIDTHS=1 data result sel
--VERSION_BEGIN 5.0 cbx_lpm_mux 2004:12:13:14:16:38:SJ cbx_mgl 2005:04:13:17:26:48:SJ  VERSION_END


--  Copyright (C) 1988-2005 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 16 
SUBDESIGN mux_7dc
( 
	data[31..0]	:	input;
	result[15..0]	:	output;
	sel[0..0]	:	input;
) 
VARIABLE 
	result_node[15..0]	: WIRE;
	sel_node[0..0]	: WIRE;
	w_data102w[1..0]	: WIRE;
	w_data114w[1..0]	: WIRE;
	w_data126w[1..0]	: WIRE;
	w_data138w[1..0]	: WIRE;
	w_data150w[1..0]	: WIRE;
	w_data162w[1..0]	: WIRE;
	w_data174w[1..0]	: WIRE;
	w_data186w[1..0]	: WIRE;
	w_data18w[1..0]	: WIRE;
	w_data30w[1..0]	: WIRE;
	w_data42w[1..0]	: WIRE;
	w_data4w[1..0]	: WIRE;
	w_data54w[1..0]	: WIRE;
	w_data66w[1..0]	: WIRE;
	w_data78w[1..0]	: WIRE;
	w_data90w[1..0]	: WIRE;
	w_result103w	: WIRE;
	w_result109w	: WIRE;
	w_result115w	: WIRE;
	w_result11w	: WIRE;
	w_result121w	: WIRE;
	w_result127w	: WIRE;
	w_result133w	: WIRE;
	w_result139w	: WIRE;
	w_result145w	: WIRE;
	w_result151w	: WIRE;
	w_result157w	: WIRE;
	w_result163w	: WIRE;
	w_result169w	: WIRE;
	w_result175w	: WIRE;
	w_result181w	: WIRE;
	w_result187w	: WIRE;
	w_result193w	: WIRE;
	w_result19w	: WIRE;
	w_result25w	: WIRE;
	w_result31w	: WIRE;
	w_result37w	: WIRE;
	w_result43w	: WIRE;
	w_result49w	: WIRE;
	w_result55w	: WIRE;
	w_result5w	: WIRE;
	w_result61w	: WIRE;
	w_result67w	: WIRE;
	w_result73w	: WIRE;
	w_result79w	: WIRE;
	w_result85w	: WIRE;
	w_result91w	: WIRE;
	w_result97w	: WIRE;

BEGIN 
	result[] = result_node[];
	result_node[] = ( w_result187w, w_result175w, w_result163w, w_result151w, w_result139w, w_result127w, w_result115w, w_result103w, w_result91w, w_result79w, w_result67w, w_result55w, w_result43w, w_result31w, w_result19w, w_result5w);
	sel_node[] = ( sel[0..0]);
	w_data102w[] = ( data[24..24], data[8..8]);
	w_data114w[] = ( data[25..25], data[9..9]);
	w_data126w[] = ( data[26..26], data[10..10]);
	w_data138w[] = ( data[27..27], data[11..11]);
	w_data150w[] = ( data[28..28], data[12..12]);
	w_data162w[] = ( data[29..29], data[13..13]);
	w_data174w[] = ( data[30..30], data[14..14]);
	w_data186w[] = ( data[31..31], data[15..15]);
	w_data18w[] = ( data[17..17], data[1..1]);
	w_data30w[] = ( data[18..18], data[2..2]);
	w_data42w[] = ( data[19..19], data[3..3]);
	w_data4w[] = ( data[16..16], data[0..0]);
	w_data54w[] = ( data[20..20], data[4..4]);
	w_data66w[] = ( data[21..21], data[5..5]);
	w_data78w[] = ( data[22..22], data[6..6]);
	w_data90w[] = ( data[23..23], data[7..7]);
	w_result103w = w_result109w;
	w_result109w = ((sel_node[] & w_data102w[1..1]) # ((! sel_node[]) & w_data102w[0..0]));
	w_result115w = w_result121w;
	w_result11w = ((sel_node[] & w_data4w[1..1]) # ((! sel_node[]) & w_data4w[0..0]));
	w_result121w = ((sel_node[] & w_data114w[1..1]) # ((! sel_node[]) & w_data114w[0..0]));
	w_result127w = w_result133w;
	w_result133w = ((sel_node[] & w_data126w[1..1]) # ((! sel_node[]) & w_data126w[0..0]));
	w_result139w = w_result145w;
	w_result145w = ((sel_node[] & w_data138w[1..1]) # ((! sel_node[]) & w_data138w[0..0]));
	w_result151w = w_result157w;
	w_result157w = ((sel_node[] & w_data150w[1..1]) # ((! sel_node[]) & w_data150w[0..0]));
	w_result163w = w_result169w;
	w_result169w = ((sel_node[] & w_data162w[1..1]) # ((! sel_node[]) & w_data162w[0..0]));
	w_result175w = w_result181w;
	w_result181w = ((sel_node[] & w_data174w[1..1]) # ((! sel_node[]) & w_data174w[0..0]));
	w_result187w = w_result193w;
	w_result193w = ((sel_node[] & w_data186w[1..1]) # ((! sel_node[]) & w_data186w[0..0]));
	w_result19w = w_result25w;
	w_result25w = ((sel_node[] & w_data18w[1..1]) # ((! sel_node[]) & w_data18w[0..0]));
	w_result31w = w_result37w;
	w_result37w = ((sel_node[] & w_data30w[1..1]) # ((! sel_node[]) & w_data30w[0..0]));
	w_result43w = w_result49w;
	w_result49w = ((sel_node[] & w_data42w[1..1]) # ((! sel_node[]) & w_data42w[0..0]));
	w_result55w = w_result61w;
	w_result5w = w_result11w;
	w_result61w = ((sel_node[] & w_data54w[1..1]) # ((! sel_node[]) & w_data54w[0..0]));
	w_result67w = w_result73w;
	w_result73w = ((sel_node[] & w_data66w[1..1]) # ((! sel_node[]) & w_data66w[0..0]));
	w_result79w = w_result85w;
	w_result85w = ((sel_node[] & w_data78w[1..1]) # ((! sel_node[]) & w_data78w[0..0]));
	w_result91w = w_result97w;
	w_result97w = ((sel_node[] & w_data90w[1..1]) # ((! sel_node[]) & w_data90w[0..0]));
END;
--VALID FILE
